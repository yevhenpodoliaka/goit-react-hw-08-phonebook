{"version":3,"file":"static/js/432.63edadc1.chunk.js","mappings":"+SAEaA,EAAOC,EAAAA,GAAAA,KAAH,4RAUJC,EAAQD,EAAAA,GAAAA,MAAH,uEAMLE,EAAQF,EAAAA,GAAAA,MAAH,8HAMLG,EAAMH,EAAAA,GAAAA,OAAH,8OAcHI,EAAaJ,EAAAA,GAAAA,IAAH,iO,4CCdvB,IAtBwB,SAACK,EAAKC,GAC5B,OAA0BC,EAAAA,EAAAA,WAAS,WACjC,IAAIC,EAEJ,IAAK,IAAD,EACFA,EAAeC,KAAKC,MAAL,UACbC,aAAaC,QAAQP,UADR,QACgBC,GAE/B,MAAOO,GACPL,EAAeF,EAGjB,OAAOE,KAXT,eAAOM,EAAP,KAAcC,EAAd,KAkBA,OAJAC,EAAAA,EAAAA,YAAU,WACRL,aAAaM,QAAQZ,EAAKI,KAAKS,UAAUJ,MACxC,CAACA,EAAOT,IAEJ,CAACS,EAAOC,K,qJCbF,SAASI,IACxB,IAAMC,GAASC,EAAAA,EAAAA,MACb,GAAwBC,EAAAA,EAAAA,GAAgB,OAAO,IAA/C,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,GAAgB,QAAQ,IAAlD,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,GAAgB,WAAW,IAA3D,eAAOK,EAAP,KAAiBC,EAAjB,KAEOC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IAE1BC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUV,EAAoB,EAApBA,KAAMT,EAAc,EAAdA,MACtC,OAAQS,GACN,IAAK,OACH,OAAOC,EAAQV,GACjB,IAAK,QACH,OAAOY,EAASZ,GAClB,IAAK,WACH,OAAOc,EAAYd,GACrB,QACE,SAmBN,OACE,4BACE,4CAEA,UAAC,KAAD,CAAMoB,SAnBW,SAAAC,GACnBA,EAAEC,iBACGb,GAASE,GAAUE,GAIxBP,GAASiB,EAAAA,EAAAA,IAAa,CAAEd,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAEjCE,IACFL,EAAQ,IACRE,EAAS,IACTE,EAAY,MARZU,EAAAA,GAAAA,MAAY,uCAgBkBC,aAAa,MAA3C,WACE,UAAC,KAAD,mBAEE,SAAC,KAAD,CAAOC,KAAK,OAAOjB,KAAK,OAAOT,MAAOS,EAAMkB,SAAUT,QAGxD,UAAC,KAAD,oBAEE,SAAC,KAAD,CACEQ,KAAK,QACLjB,KAAK,QACLT,MAAOW,EACPgB,SAAUT,QAId,UAAC,KAAD,uBAEE,SAAC,KAAD,CACEQ,KAAK,WACLjB,KAAK,WACLT,MAAOa,EACPc,SAAUT,QAId,SAAC,KAAD,CAAKQ,KAAK,SAAV","sources":["components/Form.styled.jsx","hooks/useLockalStorage.js","pages/RegisterPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  background-color: #f1f1f1;\n  padding: 8px;\n  gap: 8px;\n  border-radius: 4px;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n\n`\n\nexport const Input = styled.input`\n  border: none;\n  border-bottom:1px solid black;\n  outline: none;\n  background-color:transparent;\n`;\nexport const Btn = styled.button`\ntext-transform:uppercase;\n  display: block;\n  margin: 0 auto;\n  padding: 8px;\n  background-color: blue;\n  color: white;\n  border-radius: 4px;\n  &:hover {\n    background-color: aqua;\n    color: blue;\n  }\n`\n\nexport const FilterWrap = styled.div`\npadding:12px;\n  background-color: #f3f3f3;\n  border-radius: 4px;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;","import { useState, useEffect } from 'react';\n\nconst useLocalStorage = (key, defaultValue) => {\n  const [value, setValue] = useState(() => {\n    let currentValue;\n\n    try {\n      currentValue = JSON.parse(\n        localStorage.getItem(key) ?? defaultValue\n      );\n    } catch (error) {\n      currentValue = defaultValue;\n    }\n\n    return currentValue;\n  });\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value));\n  }, [value, key]);\n\n  return [value, setValue];\n};\n\nexport default useLocalStorage;\n","import toast from \"react-hot-toast\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport{getIsLoggedIn} from'../redux/auth/authSelector'\nimport { registerUser } from \"redux/auth/authOptions\";\nimport useLocalStorage from \"hooks/useLockalStorage\";\nimport { Form, Label, Input, Btn } from '../components/Form.styled';\n\n\nexport default function RegisterPage() {\nconst dispatch=useDispatch()\n  const [name, setName] = useLocalStorage('name','');\n  const [email, setEmail] = useLocalStorage('email','');\n  const [password, setPassword] = useLocalStorage('password','');\n\n   const isLoggedIn = useSelector(getIsLoggedIn);\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!name || !email || !password) {\n      toast.error('all form fields must be filled out')\n    return\n  }\n    dispatch(registerUser({ name, email, password }))\n    \n    if (isLoggedIn) {\n      setName('');\n      setEmail('');\n      setPassword('');\n    }\n  };\n\n  return (\n    <div>\n      <h2>Register  Page</h2>\n\n      <Form onSubmit={handleSubmit} autoComplete=\"off\">\n        <Label>\n          name\n          <Input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\n        </Label>\n\n        <Label>\n          email\n          <Input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </Label>\n\n        <Label>\n          password\n          <Input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </Label>\n\n        <Btn type=\"submit\">to register</Btn>\n      </Form>\n    </div>\n  );\n}\n"],"names":["Form","styled","Label","Input","Btn","FilterWrap","key","defaultValue","useState","currentValue","JSON","parse","localStorage","getItem","error","value","setValue","useEffect","setItem","stringify","RegisterPage","dispatch","useDispatch","useLocalStorage","name","setName","email","setEmail","password","setPassword","isLoggedIn","useSelector","getIsLoggedIn","handleChange","target","onSubmit","e","preventDefault","registerUser","toast","autoComplete","type","onChange"],"sourceRoot":""}