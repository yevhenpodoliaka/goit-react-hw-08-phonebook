{"version":3,"file":"static/js/866.8bc8a4c5.chunk.js","mappings":"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","sources":["components/Form.styled.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","pages/ContactsListPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  background-color: #f1f1f1;\n  padding: 8px;\n  gap: 8px;\n  border-radius: 4px;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n\n`\n\nexport const Input = styled.input`\n  border: none;\n  border-bottom:1px solid black;\n  outline: none;\n  background-color:transparent;\n`;\nexport const Btn = styled.button`\ntext-transform:uppercase;\n  display: block;\n  margin: 0 auto;\n  padding: 8px;\n  background-color: blue;\n  color: white;\n  border-radius: 4px;\n  &:hover {\n    background-color: aqua;\n    color: blue;\n  }\n`\n\nexport const FilterWrap = styled.div`\npadding:12px;\n  background-color: #f3f3f3;\n  border-radius: 4px;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;","import styled from \"styled-components\";\n\nexport const Item = styled.li`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  padding:4px;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const DeleteBtn= styled.button`\n  position:absolute; \n  top:8px;\n  right:8px;\n  padding:8px; \n`","import PropTypes from 'prop-types';\nimport { Item, DeleteBtn } from './ContactItem.styled';\n\nconst ContactItem = ({ name, number, onDeleteContact }) => {\n  return (\n    <Item>\n      <p>{name}</p>\n      <p>{number}</p>\n      <DeleteBtn type=\"button\" onClick={onDeleteContact}>\n        delete\n      </DeleteBtn>\n    </Item>\n  );\n};\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import ContactItem from '../ContactItem/ContactItem';\nimport { useSelector } from 'react-redux';\nimport { getFilterValue } from '../../redux/phoneBook/filterSlice';\nimport {\n  useGetContactsQuery,\n  useDeleteContactMutation,\n} from '../../redux/phoneBook/phoneBookApi';\n\nconst Contactlist = () => {\n\n  const { data: contacts } = useGetContactsQuery();\n  const [deleteContact] = useDeleteContactMutation();\n\n  const filterValue = useSelector(getFilterValue);\n\n  const getVisiblecontacts = () => {\n    const normalizedFilter = filterValue.toLowerCase();\n    return contacts?.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const visibleContacts = getVisiblecontacts();\n\n  return (\n    <>\n      <ul>\n        {visibleContacts ? (\n          visibleContacts?.map(({ id, name, number }) => (\n            <ContactItem\n              key={id}\n              name={name}\n              number={number}\n              onDeleteContact={() => deleteContact(id)}\n            />\n          ))\n        ) : (\n          <p>Loading Contact ...</p>\n        )}\n      </ul>\n      {contacts?.length === 0 && <p>there are not contacts</p>}\n    </>\n  );\n};\n\nexport default Contactlist;\n","import { useState, useEffect } from 'react';\nimport toast from 'react-hot-toast';\nimport { Form, Label, Input, Btn } from '../Form.styled';\n\nimport {\n  useAddContactMutation,\n  useGetContactsQuery,\n} from '../../redux/phoneBook/phoneBookApi';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const [addContact, { isSuccess, data }] = useAddContactMutation();\n  const { data: contacts } = useGetContactsQuery();\n\n\n\n\n  useEffect(() => {\n    if (isSuccess) {\n      toast.success(`contact ${data.name} add in list`);\n    }\n  }, [isSuccess, data]);\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n  const hasContact = () => {\n    contacts.find(el => el.name.toLowerCase() === name.toLowerCase())\n      ? toast.error(`${name} is already in contacts`)\n      : addContact({ name, number });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    hasContact();\n    setName('');\n    setNumber('');\n  };\n\n\n\n\n  return (\n    <Form\n      onSubmit={handleSubmit}\n      style={{ display: 'flex', flexDirection: 'column' }}\n    >\n      <Label>\n        Name\n        <Input\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n        />\n      </Label>\n      <Btn type=\"submit\">Add Contact</Btn>\n    </Form>\n  );\n}\n\nexport default ContactForm;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilter, getFilterValue } from '../../redux/phoneBook/filterSlice';\nimport { Label, Input, FilterWrap } from 'components/Form.styled';\n\n\nconst Filter = () => {\n  const value = useSelector(getFilterValue);\n  const dispatch = useDispatch();\n  const onChahgeFilter = e => {\n    dispatch(setFilter(e.target.value));\n  };\n  return (\n    <FilterWrap>\n      <Label>\n        Find contacts by name\n        <Input type=\"text\" value={value} onChange={onChahgeFilter} />\n      </Label>\n    </FilterWrap>\n  );\n};\n\nexport default Filter;\n","import Contactlist from '../components/ContactList/ContactList';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nexport default function ContactListPage() {\n  return (\n    <>\n      <h2>ContactListPage</h2>\n      <ContactForm />\n      <Filter/>\n      <Contactlist />\n    </>\n  );\n}\n"],"names":["Form","styled","Label","Input","Btn","FilterWrap","Item","DeleteBtn","name","number","onDeleteContact","type","onClick","contacts","useGetContactsQuery","data","useDeleteContactMutation","deleteContact","filterValue","useSelector","getFilterValue","visibleContacts","normalizedFilter","toLowerCase","filter","contact","includes","getVisiblecontacts","map","id","length","useState","setName","setNumber","useAddContactMutation","addContact","isSuccess","useEffect","toast","handleChange","e","currentTarget","value","onSubmit","preventDefault","find","el","style","display","flexDirection","pattern","title","required","onChange","dispatch","useDispatch","setFilter","target","ContactListPage"],"sourceRoot":""}